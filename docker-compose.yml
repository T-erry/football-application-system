
services:
  db:
    image: postgres:14.3-alpine

    restart: always

    volumes:
      - postgres_data_main_update:/var/lib/postgresql/data

    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
     
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest


  web:
    build: .


    expose:
      - 8000

    volumes:
      - .:/app
      - static_volume:/app/static/

    env_file:
      - .env

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
     
    
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  nginx:
    image: nginx:latest 

    depends_on:
      - web

    ports:
      - "80:80"

    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static/

  celery-beat:
    build: .

    command: ["celery", "-A", "backend", "worker", "--beat", "-l" , "INFO"]

    volumes:
      - .:/app

    depends_on:
      - db
      - redis


volumes:
  static_volume:
  postgres_data_main_update: